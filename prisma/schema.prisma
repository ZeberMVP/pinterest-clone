// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?

  username String? @unique

  image    String?
  accounts Account[]
  sessions Session[]
  pins     Pin[]
  comments Comment[]
  likes    Like[]
}

model Pin {
  id          String    @id @default(cuid())
  title       String
  image       String
  description String?
  userId      String
  comments    Comment[]
  likes       Like[]

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model Comment {
  id     String @id @default(cuid())
  text   String
  pinId  String
  userId String
  likes  Like[]

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  pin  Pin  @relation(fields: [pinId], references: [id], onDelete: Cascade)

  @@index([pinId])
  @@index([userId])
}

model Like {
  id        String  @id @default(cuid())
  userId    String
  pinId     String
  commentId String?

  user    User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  pin     Pin      @relation(fields: [pinId], references: [id], onDelete: Cascade)
  comment Comment? @relation(fields: [commentId], references: [id], onDelete: Cascade)

  @@unique([userId, pinId, commentId])
  @@index([pinId])
  @@index([commentId])
}
